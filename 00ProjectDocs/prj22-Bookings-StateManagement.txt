Copy "prj21-Bookings-Forms-Setup" and rename it as "prj22-Bookings-StateManagement"
	run command "npm install"
	
run "ionic serve" to make sure that the app runs fine 

The main thing here is Subjects abd Subscriptions using RxJS. 

Working with memory for state management, later will be done via  databse. 

Adding new offer
	Files touched: 
		place.model.ts: added the user id
		auth.service.ts: store the userid entered in a variable and also add a getter to get the userid 
		places.service.ts: fix the error by passing the userid to an array where we are building the data. Also add functions to add the place
		places/offers/new-offer.page.ts: update onCreateOffer to push add the offer. 
		places/offers/offer-item.page.ts
		places/offers/offer-item.page.html
		places/offers/offers.page.ts 
		places/offers/offers.page.html 
		places/discover/discover.page.ts
		places/discover/discover.page.html 
		
Ionic caches pages. The new place will not show on discover or offers list.
	* Loading of the data needs to be put under "ionViewWillEnter" rather than "ngOnInit"
	* declare an empty array 
	* use ? in the html to check for nulls 
	
Alternate approach to "ionViewWillEnter" through Subject & Subscription 
	* in the ts file for both discover.ts and offers.ts the "ionViewWillEnter" approach is commented but the empty array declaration and null check are still in place 
	* Subject and Subscriptions are used as an alternate
		* To learn more about Subjects and Subscriptions (RxJS)
			https://www.youtube.com/watch?v=Tux1nhBPl_w&list=PL55RiY5tL51pHpagYcrN9ubNLVXF8rGVi&index=3
	* places.service.ts 
		* check the use of BehaviorSubject when creating/populating the array 
		* get places(): cannot return the array any more it, will return an observable
		* addPlace: cannot push the place into an array any more 
			* subscribe and take
		* place get function will also return an observable 
		
	* offers-page.ts: subscribe and the fill the offers array object. Make sure to clear the custom subscription as well. 
		
	* discover-page.ts: subscribe and then fill the loadedPlaces array object. Make sure to clear the custom subscription as well. 
	
	* place-detail-page.ts: subscribe and then fill the place object. Make sure to clear the custom subscription as well. 
	
	* edit-offer-page.ts: subscribe and then fill the place object. Make sure to clear the custom subscription as well.
	
LinksService
	Added links service that has methods to build the app links. Different pages use this service now to get the links. 
	
offer-item.html
	instead of displaying dummy date display the offer date. 
	
UI State 
	Places.Service.ts
		in addPlace function, emit next after 2 seconds so that we can use the spinner when creating the place 
			return an observable to which we'll subscribe
	Other pages that got an update are 
		* new-offer.oage.ts
		* place-detail.page.ts
		* edit-offer.page.ts
		* offer-bookings.page.ts 
		* discover.page.ts
		* offers.page.ts 
		
	edit-offer.page.ts finish the code to update the place 
		Add a new method in places.service.ts to update the place. 
		
	discover.page.ts and discover.page.html handle the segmented buttons 
	
	place-detail.page.ts and place-detail.page.html display the selected offer 
	
	
	
	
	
		
	
	
	
