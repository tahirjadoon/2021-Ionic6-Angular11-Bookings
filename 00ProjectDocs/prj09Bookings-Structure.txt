View 10Prj09Bookings-Structure.pdf or 10Prj09Bookings-Structure.PNG for more details. 

	Find Places							Place detail 				Offers								Offer Details
		Tools bar with a side menu			Image						Tool Bar with a side menu 			List of bookings
		Tabs navigation						Title						Add + new offer icon on tool bar
		Featured place						Book place (Modal)			List of places
		List of other polaces				

																	New Offer (+) clciked on above
																		Form		
																		Image
																		Location
																		
																	Bookings (tool bar side menu)
																		List og bookings 
																	
	Authentication 
	

>ionic start (to start the project or copy the base project and change the name etc)
	Javascript Framework: Angular
	ProjectName: prj09Bookings-Structure
	Starter Template: Blank
	Integrate Capacitor: y
	Create free ionic account: n 
	
Move into the new folder 

Open index.html and change the title to Bookings

Delete the default "home" folder

Pages to create. The pages are being created as we'll view these in the url. 
	
	1. auth 
		>ionic generate page auth
			open app-routing.module.ts and change the route to folowing 

	2. places 
		>ionic generate page places
	
	3. places > discover 
		>ionic generate page places/discover
		
	4. places > offers 
		>ionic generate page places/offers
		
	5. places > offers > new-offer 
		>ionic generate page places/offers/new-offer
		
	6. places > offers > edit-offer 
		>ionic generate page places/offers/edit-offer
		
	7. places > offers > offer-bookings
		>ionic generate page places/offers/offer-bookings
		
	8. places > discover > place-detail 
		>ionic generate page places/discover/place-detail
		
	9. bookings [my bookings]
		>ionic generate page bookings
		
Run the app "ionic serve" to make sure that the app compiles and you see the places place holder page. 

We'll be lazy loading the app.  

At the top level we'll have three routes. IMPORTANT the routes got updated with project "prj10Bookings-Structure-Tabs" due to incorporation of tabs and dynamic pages 
	1. in the "app-routing-module.ts" file 
		The default route will be "places" 
	
		const routes: Routes = [
		  { path: '', redirectTo: 'places', pathMatch: 'full' },
		  {
			path: 'auth',
			loadChildren: () => import('./auth/auth.module').then( m => m.AuthPageModule)
		  },
		  {
			path: 'places',
			loadChildren: () => import('./places/places.module').then( m => m.PlacesPageModule)
		  },
		  {
			path: 'bookings',
			loadChildren: () => import('./bookings/bookings.module').then( m => m.BookingsPageModule)
		  },
		];
	
	2. Bookins top level "bookings-routing.module.ts" 
		const routes: Routes = [
		  {
			path: '',
			component: BookingsPage
		  }
		];
		
	3. Auth top level "auth-routing.module.ts"
		const routes: Routes = [
		  {
			path: '',
			component: AuthPage
		  }
		];
		
	4. Placs top level "places-routing.module.ts". Places has discover and offers 
		const routes: Routes = [
		  {
			path: '',
			component: PlacesPage
		  },
		  {
			path: 'discover',
			loadChildren: () => import('./discover/discover.module').then( m => m.DiscoverPageModule)
		  },
		  {
			path: 'offers',
			loadChildren: () => import('./offers/offers.module').then( m => m.OffersPageModule)
		  }
		];

	4.1. Discover has place-detail, "discover-routing.module.ts" will look like 
		const routes: Routes = [
		  {
			path: '',
			component: DiscoverPage
		  },
		  {
			path: 'place-detail', 
			loadChildren: () => import('./place-detail/place-detail.module').then( m => m.PlaceDetailPageModule)
		  }
		];
		
	5. Offers has 3 children, "offers-routing.module.ts" will look like 
		const routes: Routes = [
		  {
			path: '',
			component: OffersPage
		  },
		  {
			path: 'new-offer',
			loadChildren: () => import('./new-offer/new-offer.module').then( m => m.NewOfferPageModule)
		  },
		  {
			path: 'edit-offer', 
			loadChildren: () => import('./edit-offer/edit-offer.module').then( m => m.EditOfferPageModule)
		  },
		  {
			path: 'offer-bookings', 
			loadChildren: () => import('./offer-bookings/offer-bookings.module').then( m => m.OfferBookingsPageModule)
		  }
		];

	
	