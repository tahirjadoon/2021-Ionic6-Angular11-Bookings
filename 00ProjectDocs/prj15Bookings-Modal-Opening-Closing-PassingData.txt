Copy prj14Bookings-Auth-Basics and rename it as prj15Bookings-Modal-Opening-Closing-PassingData
	run command "npm install"
	
run "ionic serve" to make sure that the app runs fine 

Create a new component for the model which will get opened from bookings 
	IMPORTANT: book button is in places > discover > place-detail 
	> ionic generate component bookings/create-booking 
	
	The registration for the component would be in the place-detail.module.ts where the modal would be opened.  
		IMPORTANT: add to entryComponents as well since this will not get used from route or with the selector app-create-booking 
		declarations: [PlaceDetailPage, CreateBookingComponent],
		entryComponents: [CreateBookingComponent] 
		
	Go to place-detail and then click the button. It will slide up the modal
	
Passing data to the modal 
	Create an @Input bindable property and pass in the data via componentProps
	
Closing the modal	
	We'll have a button in the main bar on the create-booking.component.ts 
	We'll also have an ion-button to close 
	Will pass back some dummy text back 
	
place-detail.page.ts: to open the modal and then alert the message received back 
	async onBookPlace(){
		//this.router.navigateByUrl('/places/tabs/discover'); //displays forward animation
		//this.navCtrl.navigateBack('/places/tabs/discover'); //displays back animation
		//this.navCtrl.pop(); //pop the last page of the stack, unreliable.
		//this.navigateToBookings();

		//open modal ==> pass the date into it using the componentProps
		let modal = await this.modalCntrl.create({
						component: CreateBookingComponent,
						componentProps: { selectedPlace: this.place }, //gets passed in as the INPUT property
						keyboardClose: true,
						swipeToClose: true
					  });
		await modal.present();
		const { data, role } = await modal.onWillDismiss(); //onDidDismiss()
		if(role === "confirm"){
		  this.presentAlert(`Message passed back<br/><br/>${data.message}<br/><br/>Role '${role}' passed back`);
		}
		else{
		  this.presentAlert(`Cancel clicked!<br/><br/>Role '${role}' passed back`);
		}
	  }

	  async presentAlert(message: string){
		const alert = await this.alertCntrl.create({
		  header: 'Alert',
		  message: message,
		  buttons: ['Ok']
		});
		await alert.present();
	  }
	
create-booking.component.ts
	onCancel(){
		//we can pass the id if there are multiple modal open
		this.modalCntrl.dismiss(null, 'cancel');
	  }

	  onBookPlace(){
		//dismis and pass the modal back
		this.modalCntrl.dismiss( { message: "dummy message" }, 'confirm');

	  }
		

